local fle = io.open("CRC32_Poly.h", "w")
local poly = 0x04c11db7 -- The usual one...

fle:write("#pragma once\n#include <cstdint>\n\n")
fle:write("//This file was generated by CRC32_Poly.lua\n")
fle:write("//Used polynomial: 0x" .. bit.tohex(poly, -8) .. "\n")
fle:write("//DO NOT EDIT\n\n")
fle:write("static const uint32_t g_crcTable[256] = { ")

for i = 0, 255 do
    local n = bit.lshift(i, 24)

    for j = 1, 8 do
        if bit.band(n, 2^31) == 0 then
            n = bit.lshift(n, 1)
        else
            n = bit.bxor(bit.lshift(n, 1), poly)
        end
    end

    local str = bit.tohex(n, -8) .. "U"

    if i == 0 then
        fle:write("0x" .. str)
    else
        fle:write(", 0x" .. str)
    end
end

fle:write(" };\n")
fle:close()
print("Done")
